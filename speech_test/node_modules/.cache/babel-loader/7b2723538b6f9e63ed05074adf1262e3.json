{"ast":null,"code":"var _jsxFileName = \"/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/src/components/Animations/animationone.js\";\nimport React from 'react';\nimport p5 from 'p5';\nimport { createCanvas, cursor, fill, noStroke, font } from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnimationOne extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        let points = font.textToPoints('a piece of writing ', 0, 0, 200, {\n          sampleFactor: 1,\n          simplifyThreshold: 0\n        });\n        let bounds = font.textBounds('a piece of writing that ', 0, 0, 200); // cursor(CROSS);\n\n        fill(255, 127);\n        noStroke();\n      };\n\n      p.draw = () => {\n        p.background(0);\n        p.stroke(51);\n        p.line(width / 2, 0, width / 2, height);\n        p.line(0, height / 2, width, height / 2);\n        noStroke();\n        let centerDist = p.dist(mouseX, mouseY, width / 2, height / 2);\n        let transparency = p.map(centerDist, 0, width / 2, 200, 50);\n        transparency = p.constrain(transparency, 50, 200);\n        p.fill(255, transparency);\n        let jiggle = p.map(centerDist, 0, width, 1, 300);\n        p.translate((width - abs(bounds.w)) / 2, (height + abs(bounds.h)) / 2); // stroke(255, 0, 0);\n        // rect(bounds.x, bounds.y, bounds.w, bounds.h);\n        //   console.log(\"x: \" + bounds.x \n        //               + \", y: \" + bounds.y\n        //               + \", w: \" + bounds.w\n        //               + \", h: \" + bounds.h);\n\n        for (let i = 0; i < points.length; i++) {\n          let p = points[i];\n          p.ellipse(p.x + jiggle * p.randomGaussian(), p.y + jiggle * p.randomGaussian(), 5, 5);\n        }\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas\",\n        children: this.props.transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport { AnimationOne };","map":{"version":3,"sources":["/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/src/components/Animations/animationone.js"],"names":["React","p5","createCanvas","cursor","fill","noStroke","font","AnimationOne","Component","constructor","props","Sketch","p","setup","windowWidth","windowHeight","points","textToPoints","sampleFactor","simplifyThreshold","bounds","textBounds","draw","background","stroke","line","width","height","centerDist","dist","mouseX","mouseY","transparency","map","constrain","jiggle","translate","abs","w","h","i","length","ellipse","x","randomGaussian","y","myRef","createRef","componentDidMount","myP5","current","render","transcript"],"mappings":"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","sourcesContent":["import React from 'react';\nimport p5 from 'p5';\nimport {\n  createCanvas,\n  cursor,\n  fill,\n  noStroke,\n  font\n} from 'p5'\n\nclass AnimationOne extends React.Component {\n    constructor(props) {\n      super(props)\n      this.myRef = React.createRef()\n    }\n\n  \n    Sketch = (p) => {\n  \n      p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight);\n\n      let points = font.textToPoints(\n        'a piece of writing ', 0, 0, 200, {\n          sampleFactor: 1,\n          simplifyThreshold: 0\n        });\n    \n      let bounds = font.textBounds(\n        'a piece of writing that ', 0, 0, 200);\n    \n      // cursor(CROSS);\n      fill(255, 127);\n      noStroke();\n      }\n\n      p.draw = () => {\n\n        p.background(0);\n  \n        p.stroke(51);\n        p.line(width / 2, 0, width / 2, height);\n        p.line(0, height / 2, width, height / 2);\n        noStroke();\n        \n        let centerDist = p.dist(mouseX, mouseY, width / 2, height / 2);\n\n        let transparency = p.map(centerDist, 0, width / 2, 200, 50);\n        transparency = p.constrain(transparency, 50, 200);\n        p.fill(255, transparency);\n        \n        let jiggle = p.map(centerDist, 0, width, 1, 300);\n\n        p.translate((width - abs(bounds.w)) / 2, \n                  (height + abs(bounds.h)) / 2);\n        \n        // stroke(255, 0, 0);\n        // rect(bounds.x, bounds.y, bounds.w, bounds.h);\n        \n      //   console.log(\"x: \" + bounds.x \n      //               + \", y: \" + bounds.y\n      //               + \", w: \" + bounds.w\n      //               + \", h: \" + bounds.h);\n        \n        for (let i = 0; i < points.length; i++) {\n          let p = points[i];\n          p.ellipse(p.x + jiggle * p.randomGaussian(), \n            p.y + jiggle * p.randomGaussian(), 5, 5);\n        }\n      }\n    }\n  \n    componentDidMount() {\n      this.myP5 = new p5(this.Sketch, this.myRef.current)\n    }\n  \n    render() {\n      return (\n        <div ref={this.myRef}>\n             <div id=\"canvas\">{this.props.transcript}</div>\n        </div>\n      )\n    } \n  }\n\n  \n  \n  export { AnimationOne }"]},"metadata":{},"sourceType":"module"}