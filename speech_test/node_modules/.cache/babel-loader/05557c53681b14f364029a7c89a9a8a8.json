{"ast":null,"code":"export default class Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(v) {\n    return new Vector(this.x + v.x, this.y + v.y);\n  }\n\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n\n  sub(v) {\n    return new Vector(this.x - v.x, this.y - v.y);\n  }\n\n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n  }\n\n  mult(n) {\n    return new Vector(this.x * n, this.y * n);\n  }\n\n  div(n) {\n    return new Vector(this.x / n, this.y / n);\n  }\n\n  setAngle(angle) {\n    var length = this.getLength();\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n    return this;\n  }\n\n  setLength(length) {\n    var angle = this.getAngle();\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n    return this;\n  }\n\n  getAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  getLength() {\n    return Math.hypot(this.x, this.y);\n  }\n\n  getLengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  distanceTo(v) {\n    return this.sub(v).getLength();\n  }\n\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n\n  copy() {\n    return new Vector(this.x, this.y);\n  }\n\n  rotate(angle) {\n    return new Vector(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n  }\n\n  rotateAround(v, angle) {\n    let x = (this.x - v.x) * Math.cos(angle) - (v.y - this.y) * Math.sin(angle) + v.x;\n    let y = (v.y - this.y) * Math.cos(angle) + (this.x - v.x) * Math.sin(angle) + v.y;\n    return new Vector(x, y);\n  }\n\n  lerp(v, t) {\n    let delta = v.sub(this).mult(t);\n    return this.add(delta);\n  }\n\n  lerpTo(v, t) {\n    let delta = v.sub(this).mult(t);\n    this.addTo(delta);\n  }\n\n  moveTowards(v, length) {\n    let delta = v.sub(this).setLength(length);\n    return this.add(delta);\n  }\n\n  equals(v) {\n    return this.x == v.x && this.y == v.y;\n  }\n\n}","map":{"version":3,"sources":["/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/node_modules/vectory-lib/src/vector.js"],"names":["Vector","constructor","x","y","add","v","addTo","sub","subFrom","mult","n","div","setAngle","angle","length","getLength","Math","cos","sin","setLength","getAngle","atan2","hypot","getLengthSq","distanceTo","distanceToSq","copy","rotate","rotateAround","lerp","t","delta","lerpTo","moveTowards","equals"],"mappings":"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","sourcesContent":["export default class Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(v) {\n    return new Vector(\n      this.x + v.x,\n      this.y + v.y);\n  }\n\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n\n  sub(v) {\n    return new Vector(\n      this.x - v.x,\n      this.y - v.y);\n  }\n  \n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n  }\n  \n  mult(n) {\n    return new Vector(this.x * n, this.y * n);\n  }\n  \n  div(n) {\n    return new Vector(this.x / n, this.y / n);\n  }\n  \n  setAngle(angle) {\n    var length = this.getLength();\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n    return this;\n  }\n  \n  setLength(length) {\n    var angle = this.getAngle();\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n    return this;\n  }\n  \n  getAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n  \n  getLength() {\n    return Math.hypot(this.x, this.y);\n  }\n\n  getLengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  distanceTo(v) {\n    return this.sub(v).getLength();\n  }\n\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n  \n  copy() {\n    return new Vector(this.x, this.y);\n  }\n\n  rotate(angle) {\n    return new Vector(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n  }\n\n  rotateAround(v, angle) {\n    let x = (this.x - v.x) * Math.cos(angle) - (v.y - this.y) * Math.sin(angle) + v.x;\n    let y = (v.y - this.y) * Math.cos(angle) + (this.x - v.x) * Math.sin(angle) + v.y;\n    return new Vector(x, y);\n  }\n  \n  lerp(v, t) {\n    let delta = v.sub(this).mult(t);\n    return this.add(delta);\n  }\n\n  lerpTo(v, t) {\n    let delta = v.sub(this).mult(t);\n    this.addTo(delta);\n  }\n\n  moveTowards(v, length) {\n    let delta = v.sub(this).setLength(length);\n    return this.add(delta);\n  }\n\n  equals(v) {\n    return this.x == v.x && this.y == v.y;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}