{"ast":null,"code":"var _jsxFileName = \"/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/src/components/Animations/animationone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport p5 from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function useWindowDimensions() {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nclass AnimationOne extends React.Component {\n  constructor(props) {\n    var _s2 = $RefreshSig$();\n\n    super(props);\n    this.Sketch = _s2(p => {\n      _s2();\n\n      const {\n        height,\n        width\n      } = useWindowDimensions(); // Native p5 functions work as they would normally but prefixed with \n      // a p5 object \"p\"\n\n      p.setup = () => {\n        //Everyhting that normally happens in setup works\n        p.createCanvas(1000, 400);\n      };\n\n      p.draw = () => {\n        // And everything that normally goes in draw in here\n        p.background(0);\n        p.circle(width / 2, height / 2, 50);\n      };\n    }, \"XpgRJzjrHc1aRykyQ2CxmQZ+KAU=\", false, function () {\n      return [useWindowDimensions];\n    });\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.font = null;\n    this.points = null;\n    this.bounds = null;\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas\",\n        children: this.props.transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport { AnimationOne };","map":{"version":3,"sources":["/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/src/components/Animations/animationone.js"],"names":["React","p5","useWindowDimensions","windowDimensions","setWindowDimensions","useState","getWindowDimensions","useEffect","handleResize","window","addEventListener","removeEventListener","AnimationOne","Component","constructor","props","Sketch","p","height","width","setup","createCanvas","draw","background","circle","myRef","createRef","font","points","bounds","componentDidMount","myP5","current","render","transcript"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CC,QAAQ,CACtDC,mBAAmB,EADmC,CAAxD;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASC,YAAT,GAAwB;AACtBJ,MAAAA,mBAAmB,CAACE,mBAAmB,EAApB,CAAnB;AACD;;AAEDG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOL,gBAAP;AACD;;GAfuBD,mB;;AAiBxB,MAAMU,YAAN,SAA2BZ,KAAK,CAACa,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACjB,UAAMA,KAAN;AADiB,SASnBC,MATmB,OASTC,CAAD,IAAO;AAAA;;AACd,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoBjB,mBAAmB,EAA7C,CADc,CAEd;AACA;;AACAe,MAAAA,CAAC,CAACG,KAAF,GAAU,MAAM;AACd;AACAH,QAAAA,CAAC,CAACI,YAAF,CAAe,IAAf,EAAoB,GAApB;AACD,OAHD;;AAKAJ,MAAAA,CAAC,CAACK,IAAF,GAAS,MAAM;AACX;AACAL,QAAAA,CAAC,CAACM,UAAF,CAAa,CAAb;AACAN,QAAAA,CAAC,CAACO,MAAF,CAASL,KAAK,GAAG,CAAjB,EAAoBD,MAAM,GAAG,CAA7B,EAAgC,EAAhC;AACH,OAJD;AAKD,KAvBkB;AAAA,cAUShB,mBAVT;AAAA;AAEjB,SAAKuB,KAAL,gBAAazB,KAAK,CAAC0B,SAAN,EAAb;AAEA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,MAAL,GAAc,IAAd;AACD;;AAkBDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL,GAAY,IAAI9B,EAAJ,CAAO,KAAKe,MAAZ,EAAoB,KAAKS,KAAL,CAAWO,OAA/B,CAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,GAAG,EAAE,KAAKR,KAAf;AAAA,6BACK;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,kBAAkB,KAAKV,KAAL,CAAWmB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApCsC;;AAyCzC,SAAStB,YAAT","sourcesContent":["import React from 'react';\nimport p5 from 'p5';\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nclass AnimationOne extends React.Component {\n    constructor(props) {\n      super(props)\n      this.myRef = React.createRef()\n\n      this.font = null\n      this.points = null\n      this.bounds = null \n    }\n  \n    Sketch = (p) => {\n      const { height, width } = useWindowDimensions();\n      // Native p5 functions work as they would normally but prefixed with \n      // a p5 object \"p\"\n      p.setup = () => {\n        //Everyhting that normally happens in setup works\n        p.createCanvas(1000,400)\n      }\n\n      p.draw = () => {\n          // And everything that normally goes in draw in here\n          p.background(0)\n          p.circle(width / 2, height / 2, 50)\n      }\n    }\n  \n    componentDidMount() {\n      this.myP5 = new p5(this.Sketch, this.myRef.current)\n    }\n  \n    render() {\n      return (\n        <div ref={this.myRef}>\n             <div id=\"canvas\">{this.props.transcript}</div>\n        </div>\n      )\n    } \n  }\n\n  \n  \n  export { AnimationOne }"]},"metadata":{},"sourceType":"module"}