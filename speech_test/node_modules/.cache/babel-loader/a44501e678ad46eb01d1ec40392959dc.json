{"ast":null,"code":"var _jsxFileName = \"/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/src/components/Animations/animationone.js\";\nimport React from 'react';\nimport p5 from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnimationOne extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Sketch = p => {\n      // Native p5 functions work as they would normally but prefixed with \n      // a p5 object \"p\"\n      p.setup = () => {\n        let font = p.loadFont('./assets/Avenir.otf'); //Everyhting that normally happens in setup works\n\n        p.createCanvas(1000, 1000);\n        this.points = font.textToPoints('a piece of writing', 0, 0, 200, {\n          sampleFactor: 1,\n          simplifyThreshold: 0\n        });\n        this.bounds = font.textBounds('a piece of writing that ', 0, 0, 200);\n        p.cursor(\"CROSS\");\n        p.fill(255, 127);\n        p.noStroke();\n      };\n\n      p.draw = () => {\n        // And everything that normally goes in draw in here\n        p.background(0);\n        p.circle(p.width / 2, p.height / 2, 100);\n        p.background(0);\n        p.stroke(51);\n        p.line(p.width / 2, 0, p.width / 2, p.height);\n        p.line(0, p.height / 2, p.width, p.height / 2);\n        p.noStroke();\n        let centerDist = p.dist(p.mouseX, p.mouseY, p.width / 2, p.height / 2);\n        let transparency = p.map(centerDist, 0, p.width / 2, 200, 50);\n        transparency = p.constrain(transparency, 50, 200);\n        p.fill(255, transparency);\n        let jiggle = p.map(centerDist, 0, p.width, 1, 300);\n        p.translate((p.width - p.abs(this.bounds.w)) / 2, (p.height + p.abs(this.bounds.h)) / 2);\n\n        for (let i = 0; i < this.points.length; i++) {\n          let p = this.points[i];\n          p.ellipse(p.x + jiggle * p.randomGaussian(), p.y + jiggle * p.randomGaussian(), 5, 5);\n        }\n      };\n    };\n\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.points = null;\n    this.bounds = null;\n  }\n\n  componentDidMount() {\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.myRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"canvas\",\n        children: this.props.transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport { AnimationOne };","map":{"version":3,"sources":["/Users/Work/Documents/Projects/School/SS2022/ARCH8803/LIMW-Blue/bridge-viz-test/src/components/Animations/animationone.js"],"names":["React","p5","AnimationOne","Component","constructor","props","Sketch","p","setup","font","loadFont","createCanvas","points","textToPoints","sampleFactor","simplifyThreshold","bounds","textBounds","cursor","fill","noStroke","draw","background","circle","width","height","stroke","line","centerDist","dist","mouseX","mouseY","transparency","map","constrain","jiggle","translate","abs","w","h","i","length","ellipse","x","randomGaussian","y","myRef","createRef","componentDidMount","myP5","current","render","transcript"],"mappings":"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","sourcesContent":["import React from 'react';\nimport p5 from 'p5';\n\nclass AnimationOne extends React.Component {\n    constructor(props) {\n      super(props)\n      this.myRef = React.createRef()\n      this.points = null\n      this.bounds = null \n    }\n  \n    Sketch = (p) => {\n      // Native p5 functions work as they would normally but prefixed with \n      // a p5 object \"p\"\n      p.setup = () => {\n        let font = p.loadFont('./assets/Avenir.otf');\n        //Everyhting that normally happens in setup works\n        p.createCanvas(1000,1000)\n\n        this.points = font.textToPoints(\n          'a piece of writing', 0, 0, 200, {\n            sampleFactor: 1,\n            simplifyThreshold: 0\n          });\n      \n        this.bounds = font.textBounds(\n          'a piece of writing that ', 0, 0, 200);\n      \n        p.cursor(\"CROSS\");\n        p.fill(255, 127);\n        p.noStroke();\n      }\n\n      p.draw = () => {\n          // And everything that normally goes in draw in here\n          p.background(0)\n          p.circle(p.width / 2, p.height / 2, 100)\n          p.background(0);\n  \n          p.stroke(51);\n          p.line(p.width / 2, 0, p.width / 2, p.height);\n          p.line(0, p.height / 2, p.width, p.height / 2);\n          p.noStroke();\n          \n          let centerDist = p.dist(p.mouseX, p.mouseY, p.width / 2, p.height / 2);\n\n          let transparency = p.map(centerDist, 0, p.width / 2, 200, 50);\n          transparency = p.constrain(transparency, 50, 200);\n          p.fill(255, transparency);\n          \n          let jiggle = p.map(centerDist, 0, p.width, 1, 300);\n\n          p.translate((p.width - p.abs(this.bounds.w)) / 2, \n                    (p.height + p.abs(this.bounds.h)) / 2);\n\n          for (let i = 0; i < this.points.length; i++) {\n            let p = this.points[i];\n            p.ellipse(p.x + jiggle * p.randomGaussian(), \n              p.y + jiggle * p.randomGaussian(), 5, 5);\n          }\n      }\n    }\n  \n    componentDidMount() {\n      this.myP5 = new p5(this.Sketch, this.myRef.current)\n    }\n  \n    render() {\n      return (\n        <div ref={this.myRef}>\n             <div id=\"canvas\">{this.props.transcript}</div>\n        </div>\n      )\n    } \n  }\n\n  \n  \n  export { AnimationOne }"]},"metadata":{},"sourceType":"module"}